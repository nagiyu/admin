name: Build

on:
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build-client:
    runs-on: ubuntu-latest

    environment:
      name: development
    
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: AWS CLI install
        run: |
          cd /tmp
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: AWS set Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get Secrets from AWS SecretsManager
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            AWS_SECRETS, AWS
          parse-json-secrets: true

      - name: Get Project Secrets from DevAdmin
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            PROJECT, DevAdmin
          parse-json-secrets: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            typescript-common/common/package-lock.json
            nextjs-common/common/package-lock.json
            client/package-lock.json
      
      - name: Install dependencies for typescript-common
        run: |
          cd typescript-common/common
          npm install
      
      - name: Install dependencies for nextjs-common
        run: |
          cd nextjs-common/common
          npm install

      - name: Install dependencies and build client
        env:
          PROCESS_ENV: development
          PROJECT_SECRET: DevAdmin
          PROJECT_AWS_ACCESS_KEY: ${{ env.PROJECT_AWS_ACCESS_KEY }}
          PROJECT_AWS_SECRET_ACCESS_KEY: ${{ env.PROJECT_AWS_SECRET_ACCESS_KEY }}
          PROJECT_AWS_REGION: ${{ env.PROJECT_AWS_REGION }}
          NEXTAUTH_URL: ${{ env.PROJECT_CLIENT_BASE_URL }}
        run: |
          cd client
          npm install
          npm run build
          echo "✅ Client build completed successfully"

  build-cloud-watch-trigger:
    runs-on: ubuntu-latest

    environment:
      name: development
    
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: AWS CLI install
        run: |
          cd /tmp
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: AWS set Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get Secrets from AWS SecretsManager
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            AWS_SECRETS, AWS
          parse-json-secrets: true

      - name: Get Project Secrets from DevAdmin
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            PROJECT, DevAdmin
          parse-json-secrets: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            typescript-common/common/package-lock.json
            cloud-watch-trigger/package-lock.json
      
      - name: Install dependencies for typescript-common
        run: |
          cd typescript-common/common
          npm install

      - name: Install dependencies and build client
        env:
          PROCESS_ENV: development
          PROJECT_SECRET: DevAdmin
          PROJECT_AWS_ACCESS_KEY: ${{ env.PROJECT_AWS_ACCESS_KEY }}
          PROJECT_AWS_SECRET_ACCESS_KEY: ${{ env.PROJECT_AWS_SECRET_ACCESS_KEY }}
          PROJECT_AWS_REGION: ${{ env.PROJECT_AWS_REGION }}
        run: |
          cd cloud-watch-trigger
          npm install
          npm run build
          echo "✅ Cloud Watch Trigger build completed successfully"
